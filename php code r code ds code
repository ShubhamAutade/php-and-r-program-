
Q1. Write a PHP script for the following: Design a form to accept a string. Write a
function to count the total number of vowels (a,e,i,o,u) from the string. Show the
occurrences of each vowel from the string. (Use radio buttons and the concept of
function. Use ‘include’ construct or require stmt.)
ANS=
HTML CODE
<!DOCTYPE html>
<html lang="en">
<head>
    
</head>
<body>

    <form method="post" action="Q1-in-php.php">

        <input type="text" placeholder="enter a string " name="mystr">
        <button>submit</button>
        
    </form>
    
</body>
</html>

PHP CODE

<?php

$string=$_POST['mystr'];

echo " we entered string <br>$string <br> total number of vowel";

$vowelCount=0;
$vo=array('a','e','i','o','u');
for($i=0; $i<strlen($string); $i++){
  
    if(in_array($string[$i],$vo)){
        $vowelCount++;
    }


}

echo " $vowelCount"

?>

Q2. Write a PHP script for the following: Design a form to accept two numbers from the
user. Give options to choose the arithmetic operation (use radio buttons). Display the
result on the next form. (Use the concept of function and default parameters. Use
‘include’ construct or require stmt).

HTML CODE

<!DOCTYPE html>
<html lang="en">
<head>
    
</head>
<body>
     <form method="post" action="Q2-in-php.php">
             <input type="text" placeholder="enter num 1st" name="num1"><br><br>

             <input type="text" placeholder="enter num 2st" name="num2"><br> <br>

            <input type="radio" value="1" name="optr">Addition<br><br>

            <input type="radio" value="2" name="optr">substraction<br><br>

             <input type="radio" value="3" name="optr">multiplication<br><br>

             <input type="radio" value="4" name="optr">division<br><br>

             <button>Submit</button>
         </form>
    
</body>
</html>

PHP CODE

<?php

$num1=$_POST['num1'];
$num2=$_POST['num2'];
$ch=$_POST['optr'];
switch($ch)
{

    case 1: echo " You entered $num1 , $num2 <br> Addition is=".$num1+$num2;
            break;
            case 2: echo " You entered $num1 , $num2 <br> Subtraction is=".$num1-$num2;
            break;
            case 3: echo " You entered $num1 , $num2 <br> Multiplication is=".$num1*$num2;
            break;
            case 4: echo " You entered $num1 , $num2 <br> Divition is=".$num1/$num2;
            break;
            

}
?>
Q3. Write a PHP script for the following: Design a form to accept the details of 5 different
items, such as item code, item name, units sold, rate. Display the bill in the tabular
format. Use only 4 text boxes. (Hint : Use of explode function.)

HTML CODE

<!DOCTYPE html>
<html lang="en">
<head>
   
</head>
<body>

<form method="post" action="Q3-in-php.php">
 enter item code<br>
 <input type="text" placeholder=" enter item code" name="icode" ><br><br>
 enter item name<br>
<input type="text" placeholder=" item name" name="iname" ><br><br>
enter quantity<br>
<input type="text" placeholder=" quantity" name="iquntity" ><br><br>
enter price <br>
<input type="text" placeholder=" price" name="iprice" ><br><br>
<button> Submit</button>
 
</form> 
</body>
</html>

PHP CODE

<?php

$itemCode=$_POST['icode'];
$ItemName=$_POST['iname'];
$totalQantyity=$_POST['iquntity'];
$price=$_POST['iprice'];
$amountTOpay=$price*$totalQantyity;

$string="<br> item name = $ItemName,<br> Quntity of item= $totalQantyity,<br> price of item= $price,<br> total amount to pay=  $amountTOpay <br>";
$array=($string);
print_r($array);

?>


Q4. Write a PHP script for the following: Design a form to accept two strings from the
user and by clicking on button Compare both Strings (use Built in Function)

HTML CODE

<!DOCTYPE html>
<html lang="en">
<head>
    
</head>
<body>

    <form method="post" action="Q4-in-php.php">

        <input type="text" placeholder="enter a string 1st" name="s1">
        <input type="text" placeholder="enter a string 2nd" name="s2">
        <button>submit</button>
    </form>
    
</body>
</html>

PHP CODE

<?php

$strin1=$_POST['s1'];
$strin2=$_POST['s2'];
 $ans=strcmp($strin1,$strin2);
 echo "$ans";

?>

Q5. Using regular expressions check for the validity of entered email-id. The @ symbol
should not appear more than once. The dot (.) can appear at the most once before
@ (Use explode and ereg function.).

HTML CODE


<!DOCTYPE html>
<html lang="en">
<head>
    
    <title>Document</title>
</head>
<body>
    <form method="post" action="Q5-in-php.php">
<input type="email" placeholder="enter email id" ><br>

<button>Submit</button>

    </form>
    
</body>
</html>

PHP CODE

<?php

echo "Thanks for log in";

?>

Q6. Write a PHP script for the following: Design a form to accept two strings. Compare
the two strings using both methods (= = operator &strcmp function). Append second
string to the first string. (Use radio buttons)

HTML CODE



<!DOCTYPE html>
<html lang="en">
<head>
   
    <title>Document</title>
</head>
<body>

    <form method="post" action="Q6-in-php.php">

        enter a strin 1st:<br>

        <input type="text" placeholder="enter string 1st" name="str1"><br><br>

        enter a 2nd string:<br>
<input type="text" placeholder="enter string 2st" name="str2"><br><br>

chose whitch one type to campare a string<br><br>

Compair With ==
<input type="radio" value="1"  name="optr"><br>
Compair With strcmp() function
<input type="radio" value="2"  name="optr"><br><br>
<button>Submit</button>
    </form>
    
</body>
</html>

PHP CODE

<?php

$string1=$_POST['str1'];
$string2=$_POST['str2'];
$ch=$_POST['optr'];

switch($ch){

    case 1:

           if($string1==$string2){

            echo " string are eqal";
            
           }
           else{

            echo " string are not eqal";
           }
           break;

           case 2: $mystr=strcmp($string1,$string2);
           echo " $mystr ";

}


Q7. Write a PHP script to accept username and password. If in the first three chances,
username and password entered is correct, then display second form, otherwise
display error message.

<!DOCTYPE html>
<html lang="en">
<head>
    
    <title>Document</title>
</head>
<body>
    
    <form method="post" action="Q7-in-php.php">

        <input type="text" name="uname" placeholder="enter user name" value="1"><br><br>
        <input type="password" name="upass" placeholder="enter user password" value="2"><br><br>
        <button>submit</button>


    </form>
</body>
</html>



PHP CODE

<?php

$username=$_POST['uname'];
$userpass=$_POST['upass'];

if( $username=='abc' && $userpass==123){

    echo " <h1>WELCOME</h1>";   

}
else{

    echo " error";
}
?>
Q8. Write a PHP Script to create a class Fruit that contains data members as Name, Color and
Price. Write a member function to accept and display details of Fruit


HTML CODE
<!DOCTYPE html>
<html lang="en">
<head>
 
    <title>Document</title>
</head>
<body>

    <form method="post" action="Q8-in-php.php">
       
        enter fruit name:<br>
        <input type="text" placeholder="fruit name" name="myf"><br><br>
        enter fruit quantyty in KG:<br>
        <input type="text" placeholder="fruit qantity" name="myfq"><br><br>
        <button>submit</button>




    </form>
    
</body>
</html>

PHP CODE

<?php

$fname=$_POST['myf'];
$fruitQuantity=$_POST['myfq'];

$fprice=70;
 $orderNumber=1;
 $total=$fprice*$fruitQuantity;

 echo" Item name = $fname <br><br>
        Item code = $orderNumber<br><br>
        Quntiti in KG= $fruitQuantity<br><br>
         1KG Rate = $fprice<br><br>
         TOTAL= $total";

         ?>
Q9. Write a PHP script to accept customer name and the list of product and quantity on the first
page. On the next page display the name of the customer, name of the products, rate of the
product, quantity, and total price in table format


HTML CODE



<!DOCTYPE html>

<head>
    
    <title>Document</title>
</head>
<body>
    <form method="post" action="Q9-in-php.php">
        Enter your name : <br>
        <input type="text" name="cname"  placeholder="Your Name"><br><br>
        Enter your product name : <br>

        <input type="text" name="pname"  placeholder=" product name"><br><br>

        Enter your Product quantity in KG/ Nmber : <br>
           
        <input type="text" name="qgood" placeholder="quantity in KG/ Number"><br><br>

        <button>Submit</button>

    </form>
    
</body>
</html>

PHP CODE


<?php

$cnames=$_POST['cname'];
$p=$_POST['pname'] ;
$q=$_POST['qgood'];

$kgrate=70;
$total=$kgrate*$q;

echo"<br>
                  Custumar name :$cnames <br>
                  Product :$p<br>
                  Rate of product:$kgrate
                  <br> Quantity of product:$q<br>
                  Total price:$total <br>";
?>


Q10. Write HTML code to design multiple choice question paper for PHP subject. Display question
wise marks and total marks received by the student in table format.


HTML code

<!DOCTYPE html>
<html lang="en">
<head>
    
    <title>Document</title>
</head>
<body>

    <form method="post" action="Q10-in-php.php">
             Enter Your Name:<br>
             <input type="text" name="sname" placeholder="Youyr name">

            <h2> answer the folowing question</h2></h3></h3>
           <h3> Q1] Whith one use of php  for 2 marks</h3><br><br>
            Stylesheet<input type="radio" name="right" value="0"><br>
            Database<input type="radio" name="right" value="0"><br>
            Backend<input type="radio" name="right1" value="2"><br>
            Frontend<input type="radio" name="right" value="0"><br>
           
            <h3> Q2] Whith is  php  comment for 4 marks</h3><br><br>
                                * <input type="radio" name="right" value="0"><br>
                                // <input type="radio" name="right2" value="4"><br>
                                 $<input type="radio" name="right" value="0"><br>
                                 #<input type="radio" name="right" value="0"><br>

                                 <h3> Q3] Full from of php   for 5 marks</h3><br><br>
           Hyper Text preprocesor <input type="radio" name="right3" value="5"><br>
           pre hyper php <input type="radio" name="right" value="0"><br>
            not full form<input type="radio" name="right" value="0"><br>
           not all above<input type="radio" name="right" value="0"><br>


         <button>submit</button>

            </form>
            </body>
            </html>

PHP CODE

<?php

$sname=$_POST['sname'];
$a1=$_POST['right1'];
$a2=$_POST['right2'];
$a3=$_POST['right3'];

$totalMarks=0;

if($a1==2){
    $totalMarks+=2;
}
else{
    $totalMarks+=0;
}
if($a2==4){
    $totalMarks+=4;
}
else{
    $totalMarks+=0;
}
if($a3==5){
    $totalMarks+=5;
}
else{
    $totalMarks+=0;
}
echo"<br>Student Name
$sname<br> Total Marks =$totalMarks";
?>
Q11. To design an application that works as a simple calculator using PHP. (use isset())

HTML CODE

<!DOCTYPE html>
<html lang="en">
<head>
   
    <title>Document</title>
</head>
<body>

    <form method="post" action="Q11-in-php.php">

    <h3>enter a numbe</h3><br>
    <input type="text" placeholder="enter a number" name="num1" ><br>
    <input type="radio" name="optr" value="1">+
<input type="radio" name="optr" value="2">_
<input type="radio" name="optr" value="3">/
<input type="radio" name="optr" value="4">*


    <h3>enter a numbe</h3><br>
    <input type="text" placeholder="enter a number" name="num2" ><br>

    <button>submit</button>

    </form>
    
</body>
</html>

PHP CODE

<?php

$num2=$_POST['num1'];
$num1=$_POST['num2'];
$ch=$_POST['optr'];

switch($ch){

    case 1: echo " You entered $num1 , $num2 <br> Addition is=".$num1+$num2;
    break;
    case 2: echo " You entered $num1 , $num2 <br> Subtraction is=".$num1-$num2;
    break;
    case 3: echo " You entered $num1 , $num2 <br> division is=".$num1/$num2;
    break;
    case 4: echo " You entered $num1 , $num2 <br>Multiplication is=".$num1*$num2;
    break;
    


}


R RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
1.Write an R Program to Print “Hello world” using the print() function.
Solution:
message <-"Hello world "
print(message)
2.Write an R program to find factorial of a number using factorial() function.
Solution:
# R program to calculate factorial value
# Using factorial() method
answer1 <- factorial(4)
answer2 <- factorial(5)
answer3 <- factorial(0)
print(answer1)
print(answer2)
print(answer3)
3.Write an R program to print multiplication table.
Solution:
# Program to find the multiplication
# table (from 1 to 10)
# of a number input by the user
# take input from the user
num = as.integer(readline(prompt = "Enter a number: "))
# use for loop to iterate 10 times
for(i in 1:10) 
{
 print(paste(num,'x', i, '=', num*i))
}

4. Write a R program to accept temperatures in Fahrenheit (F) and print it in
Celsius (C).
Solution:
# Convert Fahrenheit to Celsius
fahrenheit_to_celsius <- function(fahrenheit) {
 return((fahrenheit - 32) * 5/9)
}
# Example: Convert 77 degrees Fahrenheit to Celsius
fahrenheit_temp <- 77
celsius_temp <- fahrenheit_to_celsius(fahrenheit_temp)
cat(fahrenheit_temp, "degrees Fahrenheit is equal to", celsius_temp, "Celsius\n")
5. Write a R program accept any year as input and check whether the year is
a leap year or not.
Solution:
# Function to check for a leap year
is_leap_year <- function(year) {
 if ((year %% 4 == 0 && year %% 100 != 0) || year %% 400 == 0) {
 return(TRUE)
 } else {
 return(FALSE)
 }
}
# Input year
input_year <- 2024
# Check if it's a leap year
if (is_leap_year(input_year)) {
 print(paste(input_year, "is a leap year.")
} else {
 print(paste(input_year, "is not a leap year."))
}
6. write a r program to find weather given number is positive or negative or zero
Solution:
num=-6
if(num>0)
{
 print("positive number")
}else
 if(num==0)
 {
 print("zero")
 
 }else
 {
 print("negative number")
}
7. Write an R program to sort a Vector in ascending and descending order.
Solution:
x = c(10, 20, 30, 25, 9, 26)
print("Original Vectors:")
print(x)
print("Sort in ascending order:")
print(sort(x))
print("Sort in descending order:")
print(sort(x, decreasing=TRUE))
8. Write an R program to check number is Armstrong or no
8. Write an R program to check number is Armstrong or not
Solution:
armstrong<-function(num){
 temp = num
 n = 0L
 while(temp>0){
 temp = floor(temp/10)
 n=n+1
 }
 temp = num
 sum = 0
 while(temp>0){
 digit = temp%%10
 sum = sum + (digit^n)
 temp = floor(temp/10)
 }
 if(num==sum){
 paste(num,"is a armstrong number")
 }else{
 paste(num,"is not a armstrong number")
 }
}
armstrong(7)
armstrong(4679307774)
armstrong(153)
9. write a R program to create a simple bar plot of five subjects marks.
Solution:
marks = c(70, 95, 80, 74)
barplot(marks,
 main = "Comparing marks of 5 subjects",
 xlab = "Marks",
 ylab = "Subject",
 names.arg = c("English", "Science", "Math.", "Hist."),
 col = "darkred",
 horiz = FALSE)
10. Write a R program to check if a number is even or odd.
Solution:
check_odd_even <- function(number) {
 if (number %% 2 == 0) {
 return("Even")
 } else {
 return("Odd")
}
}
# Example usage
number_to_check <- 15
result <- check_odd_even(number_to_check)
cat(number_to_check, "is an", result, "number.")


DSDSDSDSDSDSDSDSDSDSDSDDDSDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
 
 
1. Write a C program to accept and sort n elements in ascending order by using bubble sort. 
#include<stdio.h> 
#include<conio.h> 
#define MAXSIZE 10 
void main() 
{ 
int array[MAXSIZE]; 
int i, j, num, temp; 
clrscr(); 
printf("Enter the value of num \n"); 
scanf("%d", &num); 
printf("Enter the elements one by one \n"); 
for (i = 0; i < num; i++) 
{ 
scanf("%d", &array[i]); 
} 
printf("Input array is \n"); 
for (i = 0; i < num; i++) 
{ 
printf("%d\n", array[i]); 
} 
for (i = 0; i < num; i++) 
{ 
for (j = 0; j < (num - i - 1); j++) 
{ 
if (array[j] > array[j + 1]) 
{ 
temp = array[j]; 
array[j] = array[j + 1]; 
array[j + 1] = temp; 
} 
} 
} 
printf("Sorted array is...\n"); 
for (i = 0; i < num; i++) 
{ 
printf("%d\n", array[i]); 
} 
getch(); 
} 
2. Write a C program to accept and sort n elements in ascending order by using insertion sort. 
 
#include<stdio.h> 
#include<conio.h> 
void main() 
{ 
int n, i, j, temp; 
int arr[64]; 
clrscr(); 
printf("Enter number of elements\n"); 
scanf("%d", &n); 
printf("Enter %d integers\n", n); 
for (i = 0; i < n; i++) 
{ 
scanf("%d", &arr[i]); 
} 
for (i = 1; i < n; i++) 
{ 
j = i; 
while (j > 0 && arr[j - 1] > arr[j]) 
{ 
temp = arr[j]; 
arr[j] = arr[j - 1]; 
arr[j - 1] = temp; 
j--; 
} 
} 
printf("Sorted list in ascending order:\n"); 
for (i = 0; i < n; i++) 
{ 
printf("%d\n", arr[i]); 
} 
getch(); 
} 
 3.write a c program to acept sort enlement in asending order  using selection sort
method. 
#include<stdio.h> 
#include<conio.h> 
void main() 
{ 
int array[100], n, c, d, position, t; 
clrscr(); 
printf("Enter number of elements\n"); 
scanf("%d", &n); 
printf("Enter %d integers\n", n); 
for (c = 0; c < n; c++) 
scanf("%d", &array[c]); 
for (c = 0; c < (n - 1); c++) // finding minimum element (n-1) times 
{ 
position = c; 
for (d = c + 1; d < n; d++) 
{ 
if (array[position] > array[d]) 
position = d; 
} 
if (position != c) 
{ 
t = array[c]; 
array[c] = array[position]; 
array[position] = t; 
} 
} 
printf("Sorted list in ascending order:\n"); 
for (c = 0; c < n; c++) 
printf("%d\n", array[c]); 
getch(); 
} 
 
4. Write a C program to accept and sort n elements in ascending order by using quick sort 
 
#include<stdio.h> 
#include<conio.h> 
void quicksort(int x[20],int first,int last) 
{ 
int pivot,j,temp,i; 
if(first<last) 
{ 
pivot=first; 
i=first; 
j=last; 
while(i<j) 
{ 
while(x[i]<=x[pivot]&&i<last) 
i++; 
while(x[j]>x[pivot]) 
j--; 
if(i<j) 
{ 
temp=x[i]; 
x[i]=x[j]; 
x[j]=temp; 
} 
} 
temp=x[pivot]; 
x[pivot]=x[j]; 
x[j]=temp; 
quicksort(x,first,j-1); 
quicksort(x,j+1,last); 
} 
} 
int main() 
{ 
int x[20],size,i; 
clrscr(); 
printf(" How many numbers you want to sort?: "); 
scanf("%d",&size); 
printf("\n Enter %d elements: \n",size); 
for(i=0;i<size;i++) 
scanf("%d",&x[i]); 
quicksort(x,0,size-1); 
printf("\n Sorted elements after applying quick sort: \n"); 
for(i=0;i<size;i++) 
printf(" %d",x[i]); 
getch(); 
return 0; 
} 
5. Write a C program to accept n elements from user store it in an array. Accept a value from the user and
use linear/Sequential search method to check whether the value is present in array or not. Display proper 
message 
 
#include<stdio.h> 
#include<conio.h> 
void main() 
{ 
int arr[100], n, i, search; 
clrscr(); 
printf("Enter the number of elements you want in the array: "); 
scanf("%d", &n); 
for(i=0; i<n; i++) 
{ 
printf("Enter value for index %d: ", i); 
scanf("%d", &arr[i]); 
} 
printf("\nEnter the number you want to search in the array: "); 
scanf("%d", &search); 
for(i=0; i<n; i++) 
{ 
if(arr[i] == search) 
{ 
printf("\n%d found at %d position.\n", search, i); 
break; 
} 
} 
if(i == n) 
{ 
printf("\n%d not found in the array.\n",search); 
} 
getch(); 
} 
 
6. Write a C program to accept n elements from user store it in an array. Accept a value from the 
 
user and use binary search method to check whether the value is present in array or not. 
Display proper message. (Students should accept sorted array and use Recursive function). 
#include <stdio.h> 
void binary_search(int [], int, int, int); 
void bubble_sort(int [], int); 
int main() 
{ 
int key, size, i; 
int list[25]; 
clrscr(); 
printf("Enter size of a list: "); 
scanf("%d", &size); 
printf("Enter elements\n"); 
for(i = 0; i < size; i++) 
{ 
scanf("%d",&list[i]); 
} 
bubble_sort(list, size); 
printf("\n"); 
printf("Enter key to search\n"); 
scanf("%d", &key); 
binary_search(list, 0, size, key); 
getch(); 
} 
void bubble_sort(int list[], int size) 
{ 
int temp, i, j; 
for (i = 0; i < size; i++) 
{ 
for (j = i; j < size; j++) 
{ 
if (list[i] > list[j]) 
{ 
temp = list[i]; 
list[i] = list[j]; 
list[j] = temp; 
} 
} 
} 
} 
void binary_search(int list[], int lo, int hi, int key) 
{ 
int mid; 
if (lo > hi) 
{ 
printf("Key not found\n"); 
return; 
} 
mid = (lo + hi) / 2; 
if (list[mid] == key) 
{ 
printf("Key found\n"); 
} 
else if (list[mid] > key) 
{ 
binary_search(list, lo, mid - 1, key); 
} 
else if (list[mid] < key) 
{ 
binary_search(list, mid + 1, hi, key); 
} 
} 
7. Write a C program to implement a Circular Singly linked list with Create and Display operation. 
 
#include<stdio.h> 
#include<stdlib.h> 
#include<conio.h> 
struct node 
{ 
int num; 
struct node *nextptr; 
}*stnode; 
void ClListcreation(int n); 
void displayClList(); 
int main() 
{ 
int n; 
stnode = NULL; 
clrscr(); 
printf(" Input the number of nodes : "); 
scanf("%d", &n); 
ClListcreation(n); 
displayClList(); 
getch(); 
} 
void ClListcreation(int n) 
{ 
int i, num; 
struct node *preptr, *newnode; 
if (n >= 1) 
{ 
stnode = (struct node *)malloc(sizeof(struct node)); 
printf(" Input data for node 1 : "); 
scanf("%d", &num); 
stnode->num = num; 
stnode->nextptr = NULL; 
preptr = stnode; 
for (i = 2; i <= n; i++) 
{ 
newnode = (struct node *)malloc(sizeof(struct node)); 
printf(" Input data for node %d : ", i); 
scanf("%d", &num); 
newnode->num = num; 
newnode->nextptr = NULL; 
preptr->nextptr = newnode; 
preptr = newnode; 
} 
preptr->nextptr = stnode; 
} 
} 
void displayClList() 
{ 
struct node *tmp; 
int n = 1; 
if (stnode == NULL) 
{ 
printf(" No data found in the List yet."); 
} 
else 
{ 
tmp = stnode; 
printf("\n\n Data entered in the list are :\n"); 
do 
{ 
printf(" Data %d = %d\n", n, tmp->num); 
tmp = tmp->nextptr; 
n++; 
} 
while (tmp != stnode); 
} 
} 
8. Write a C program to implement a singly linked list with Create and Display operation. 
 
#include<stdio.h> 
#include<stdlib.h> 
struct node 
{ 
int num; 
struct node *nextptr; 
} *stnode; 
void createNodeList(int n); 
void displayList(); 
void main() 
{ 
int n; 
clrscr(); 
printf(" Input the number of nodes : "); 
scanf("%d", &n); 
createNodeList(n); 
printf("\n Data entered in the list : \n"); 
displayList(); 
getch(); 
} 
void createNodeList(int n) 
{ 
struct node *fnNode, *tmp; 
int num, i; 
stnode = (struct node *)malloc(sizeof(struct node)); 
if(stnode == NULL) 
{ 
printf(" Memory can not be allocated."); 
} 
else 
{ 
printf(" Input data for node 1 : "); 
scanf("%d", &num); 
stnode->num = num; 
stnode->nextptr = NULL; 
tmp = stnode; 
for(i = 2; i <= n; i++) 
{ 
fnNode = (struct node *)malloc(sizeof(struct node)); 
if(fnNode == NULL) 
{ 
printf(" Memory can not be allocated."); 
break; 
} 
else 
{ 
printf(" Input data for node %d : ", i); 
scanf(" %d", &num); 
fnNode->num = num; 
fnNode->nextptr = NULL; 
tmp->nextptr = fnNode; 
tmp = tmp->nextptr; 
} 
} 
} 
} 
void displayList() 
{ 
struct node *tmp; 
if(stnode == NULL) 
{ 
printf(" List is empty."); 
} 
else 
{ 
tmp = stnode; 
while(tmp != NULL) 
{ 
printf(" Data = %d\n", tmp->num); 
tmp = tmp->nextptr; 
} 
} 
} 
9. Write a C program to implement a doubly linked list with Create and Display operation. 
 
#include<stdio.h> 
#include<stdlib.h> 
#include<conio.h> 
struct node 
{ 
int num; 
struct node *preptr; 
struct node *nextptr; 
} *stnode, *ennode; 
void DlListcreation(int n); 
void displayDlList(); 
int main() 
{ 
int n; 
stnode = NULL; 
ennode = NULL; 
clrscr(); 
printf(" Input the number of nodes : "); 
scanf("%d", &n); 
DlListcreation(n); 
displayDlList(); 
getch(); 
} 
void DlListcreation(int n) 
{ 
int i, num; 
struct node *fnNode; 
if (n >= 1) 
{ 
stnode = (struct node *)malloc(sizeof(struct node)); 
if (stnode != NULL) 
{ 
printf(" Input data for node 1 : "); 
scanf("%d", &num); 
stnode->num = num; 
stnode->preptr = NULL; 
stnode->nextptr = NULL; 
ennode = stnode; 
for (i = 2; i <= n; i++) { 
fnNode = (struct node *)malloc(sizeof(struct node)); 
if (fnNode != NULL) { 
printf(" Input data for node %d : ", i); 
scanf("%d", &num); 
fnNode->num = num; 
fnNode->preptr = ennode; 
fnNode->nextptr = NULL; 
ennode->nextptr = fnNode; 
ennode = fnNode; 
} 
else 
{ 
printf(" Memory can not be allocated."); 
break; 
} 
} 
} 
else 
{ 
printf(" Memory can not be allocated."); 
} 
} 
} 
void displayDlList() 
{ 
struct node *tmp; 
int n = 1; 
if (stnode == NULL) 
{ 
printf(" No data found in the List yet."); 
} 
else 
{ 
tmp = stnode; 
printf("\n\n Data entered on the list are :\n"); 
while (tmp != NULL) 
{ 
printf(" node %d : %d\n", n, tmp->num); 
n++; 
tmp = tmp->nextptr; 
} 
} 
} 
10.Write a C program to implement a doubly linked list with Create and Display operation. 
#include<stdio.h> 
#include<stdlib.h> 
struct Node 
{ 
int data; 
struct Node* next; 
struct Node* prev; 
}; 
struct Node* createNode(int data) 
{ 
struct Node* newNode = (struct Node*)malloc(sizeof(struct Node)); 
newNode->data = data; 
newNode->next = newNode; // Point to itself 
newNode->prev = newNode; // Point to itself 
return newNode; 
} 
void insertEnd(struct Node** head, int data) 
{ 
struct Node* newNode = createNode(data); 
if (*head == NULL) 
{ 
*head = newNode; 
} 
else 
{ 
struct Node* tail = (*head)->prev; 
tail->next = newNode; 
newNode->prev = tail; 
} 
newNode->next = *head; 
(*head)->prev = newNode; 
} 
void displayList(struct Node* head) 
{ 
if (head == NULL) 
{ 
printf("The list is empty.\n"); 
return; 
} 
struct Node* temp = head; 
do { 
printf("%d ", temp->data); 
temp = temp->next; 
} 
while(temp != head); 
printf("\n"); 
} 
int main() 
{ 
struct Node* head = NULL; 
insertEnd(&head, 10); 
insertEnd(&head, 20); 
insertEnd(&head, 30); 
insertEnd(&head, 40); 
insertEnd(&head, 50); 
printf("Circular Doubly Linked List: "); 
displayList(head); 
return 0;
}
